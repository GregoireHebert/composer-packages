<?php

declare(strict_types=1);

namespace ComposerPackages;

use Composer\Package\CompletePackage;
use Composer\Package\PackageInterface;
use Composer\Package\Loader\ArrayLoader;

/**
 * This class is generated by drupol/composer-packages.
 *
 * This file is overwritten at every run of `composer install` or `composer update`.
 */
final class Directories implements \Countable, \IteratorAggregate
{
    public const GENERATED_AT = {{ generatedAt }};
    public const ROOT_PACKAGE_NAME = '{{ rootPackageName }}';

    private const DIRECTORIES = {{ directories|export }};

    /**
     * {@inheridoc}
     */
    public function count(): int
    {
        return \count(self::DIRECTORIES);
    }

    /**
     * Get a package.
     *
     * @param string $name
     *
     * @return null|CompletePackage
     *   A Composer package.
     */
    public static function get(string $name): ?CompletePackage
    {
        return self::DIRECTORIES[$name] ?? null;
    }

{% for name, dir in directories %}
    /**
     * Get the package "{{ name }}".
     *
     * @return string
     *   The package installation directory.
     */
    public static function {{ name|camelize }}(): string
    {
        return self::DIRECTORIES['{{ name }}'];
    }

{% endfor %}
    /**
     * {@inheritdoc}
     */
    public function getIterator(): \Generator
    {
        yield from self::DIRECTORIES;
    }
}
